@use "breakpoint" as *;
@use "ui" as *;

@mixin button($style:primary) {

  @include ui(button);

  font-family: 'Akkurat Mono', serif;
  padding: 10px 0;
  min-width: 170px;
  text-transform: uppercase;
  font-size: 10px;

  &[disabled] {
    cursor: no-drop;
    opacity: 0.33;
    &:focus,
    &:hover {
      background: initial;
      color: initial;
    }
  }

  // ---------------------------------------- Primary
  @if $style == primary {

    background: rgba(var(--theme-colour-black), 1);
    color: rgba(var(--theme-colour-white), 1);

    &:focus,
    &:hover {
      background: rgba(var(--theme-colour-yellow), 1);
      color: rgba(var(--theme-colour-black), 1);
    }

  }

  // ---------------------------------------- Secondary
  @if $style == secondary {

    background: rgba(var(--theme-colour-yellow), 1);
    color: rgba(var(--theme-colour-black), 1);

    &:focus,
    &:hover {
      background: rgba(var(--theme-colour-black), 1);
      color: rgba(var(--theme-colour-white), 1);
    }

  }

  // ---------------------------------------- Tertiary
  @if $style == tertiary {

    background: rgba(var(--theme-colour-blue), 1);
    color: rgba(var(--theme-colour-white), 1);

    &:focus,
    &:hover {
      background: rgba(var(--theme-colour-black), 1);
      color: rgba(var(--theme-colour-white), 1);
    }

  }

  // ---------------------------------------- Outlined
  @if $style == outlined {

    border-width: 2px;
    border-style: solid;
    border-color: rgba(var(--theme-colour-black), 1);
    background: rgba(var(--theme-colour-black), 0);
    color: rgba(var(--theme-colour-black), 1);

    &:focus,
    &:hover {
      background: rgba(var(--theme-colour-black), 1);
      color: rgba(var(--theme-colour-white), 1);
    }

    .button__title {
      margin-bottom: -3px;
    }

  }

  @include breakpoint(sm) {

    min-width: 190px;
    font-size: 12px;

  }

  @include breakpoint(md) {

    min-width: 220px;
    font-size: 14px;

  }

  @include breakpoint(lg) {

    min-width: 300px;
    padding: 14px 0;

  }

  @include breakpoint(xl) {

    min-width: 370px;
    padding: 15px 0;

  }

  @include breakpoint(xxl) {

    min-width: 440px;
    font-size: 16px;
    padding: 14px 0;

  }

}



// @use '../variables' as *;
// @use 'sass:color';
// @use 'sass:map';
// @use "border" as *;
// @use "breakpoint" as *;
// @use "font" as *;
// @use "ui" as *;
//
// @mixin button-style( $style: 1 ) {
//
//   @if $style == 1 {
//     @include clarendon-wide(700);
//     text-transform: uppercase;
//     @each $name, $value in $theme-button-heights {
//       @if $name == 'base' {
//         height: $value;
//       } @else {
//         @include breakpoint(#{$name}) {
//           height: $value;
//         }
//       }
//     }
//   }
//
//   @if $style == 2 {
//     @include border-solid( var(--theme-border-width), 'inherit', 'bottom' );
//     @include sarina(400);
//     &:hover {
//       border-bottom-color: transparent;
//       color: currentcolor;
//     }
//   }
//
//   @if $style == 3 {
//     @include new-sprint(300);
//   }
//
// }
//
// @mixin button-colour-text( $style: 'dark' ) {
//
//   $colour: map.get( $theme-colours, 'off-black' );
//
//   @if $style == 'light' {
//     $colour: map.get( $theme-colours, 'off-white' );
//   }
//
//   $colour-hover: color.scale( $colour, $lightness: -15% );
//
//   color:  $colour;
//
//   &:hover {
//     color: $colour-hover;
//   }
//
// }

